{"objects": {"tests": [], "testlists": ["{\"key\": [\"lrc-tps-annual-qa\"], \"object\": {\"model\": \"qa.testlist\", \"fields\": {\"name\": \"LRC TPS Annual QA\", \"slug\": \"lrc-tps-annual-qa\", \"description\": \"Annual Eclipse TPS QA. Recalculate gold standard plans and compare to reference dosecubes.\", \"javascript\": \"\", \"warning_message\": \"Do not treat\"}}, \"dependencies\": [{\"model\": \"qa.category\", \"fields\": {\"name\": \"Treatment Planning\", \"slug\": \"treatment-planning\", \"description\": \"Tests associated with treatment planning system e.g. Eclipse\"}}, {\"model\": \"qa.category\", \"fields\": {\"name\": \"Treatment Planning\", \"slug\": \"treatment-planning\", \"description\": \"Tests associated with treatment planning system e.g. Eclipse\"}}, {\"model\": \"qa.category\", \"fields\": {\"name\": \"Treatment Planning\", \"slug\": \"treatment-planning\", \"description\": \"Tests associated with treatment planning system e.g. Eclipse\"}}, {\"model\": \"qa.category\", \"fields\": {\"name\": \"Treatment Planning\", \"slug\": \"treatment-planning\", \"description\": \"Tests associated with treatment planning system e.g. Eclipse\"}}, {\"model\": \"qa.category\", \"fields\": {\"name\": \"Treatment Planning\", \"slug\": \"treatment-planning\", \"description\": \"Tests associated with treatment planning system e.g. Eclipse\"}}, {\"model\": \"qa.category\", \"fields\": {\"name\": \"Factors\", \"slug\": \"factors\", \"description\": \"Factors to be applied in various other categories (e.g. temperature, pressure, standard readings etc.)\"}}, {\"model\": \"qa.test\", \"fields\": {\"name\": \"LRC TPS: Dose Cube Comparison\", \"display_name\": \"Dose Cube Comparison\", \"slug\": \"lrc_tps_status\", \"description\": \"Status of the comparison between uploaded plan and baseline. Pass = difference within tolerance. Fail = difference outside tolerance.\\r\\nTolerance = 0.004 Gy\", \"procedure\": null, \"category\": [\"Treatment Planning\"], \"chart_visibility\": false, \"type\": \"scomposite\", \"flag_when\": null, \"hidden\": false, \"skip_without_comment\": false, \"require_comment\": false, \"display_image\": false, \"choices\": null, \"constant_value\": null, \"wrap_low\": null, \"wrap_high\": null, \"calculation_procedure\": \"result = lrc_tps_analyse[\\\"status\\\"]\\n\", \"formatting\": \"\"}}, {\"model\": \"qa.test\", \"fields\": {\"name\": \"LRC TPS: Month/Plan\", \"display_name\": \"Month/Plan\", \"slug\": \"lrc_tps_month\", \"description\": \"Annual TPS QA: Dropdown select month/plan name.\", \"procedure\": null, \"category\": [\"Treatment Planning\"], \"chart_visibility\": true, \"type\": \"multchoice\", \"flag_when\": null, \"hidden\": false, \"skip_without_comment\": false, \"require_comment\": false, \"display_image\": false, \"choices\": \"January: ArcChk 10FFF,February: Brain 6X,March: Lung SABR,April: ArcChk 6X,May: Brst 6FFF,June: Breast SIB,July: ArcChk 10X,August: Leg 6X,September: Lung 6FFF,October: ArcChk 6FFF,November: Spine SABR,December: Spine Simple\", \"constant_value\": null, \"wrap_low\": null, \"wrap_high\": null, \"calculation_procedure\": \"lrc_tps_month = \\\"\\\"\\n\", \"formatting\": \"\"}}, {\"model\": \"qa.test\", \"fields\": {\"name\": \"LRC TPS: Dose Cube Analysis\", \"display_name\": \"Dose Cube Analysis\", \"slug\": \"lrc_tps_analyse\", \"description\": \"Hidden test to process uploaded dosecube\", \"procedure\": null, \"category\": [\"Treatment Planning\"], \"chart_visibility\": false, \"type\": \"scomposite\", \"flag_when\": null, \"hidden\": true, \"skip_without_comment\": false, \"require_comment\": false, \"display_image\": false, \"choices\": null, \"constant_value\": null, \"wrap_low\": null, \"wrap_high\": null, \"calculation_procedure\": \"import pydicom\\nimport hashlib\\nimport numpy.testing as npt\\nimport numpy as np\\nimport datetime\\nimport os\\nfrom glob import glob\\n\\n# change if deploying on QA server\\ndeployed = False\\nif deployed:\\n    this_test_id = \\\"\\\"  # change to test ID on deployment server\\n    media_path = \\\"\\\"  # change to media path on deployment server\\nelse:\\n    this_test_id = \\\"2508\\\"\\n    media_path = \\\"/home/ubuntu/web/qatrackplus/qatrack/media/\\\"\\n\\nresult = {}\\nstatus = \\\"Fail\\\"\\n\\n# month selected by user\\ntest_month_plan = lrc_tps_month.split(\\\": \\\")[1].lower().replace(\\\" \\\", \\\"-\\\")\\n\\n# Read test file\\nds = dicom.read_file(lrc_tps_doseupload)\\n\\n# Must be dicom dose\\nif ds.Modality != \\\"RTDOSE\\\":\\n    UTILS.set_comment(\\\"Modality is required to be RTDOSE\\\")\\n    result[\\\"status\\\"] = status\\n\\n# Path to reference dosecubes\\nref_path = os.path.join(\\n    media_path,\\n    \\\"uploads\\\",\\n    \\\"test\\\",\\n    this_test_id,\\n    \\\"*\\\" + test_month_plan + \\\"*.dcm\\\",\\n)\\nref_file = glob(ref_path)[0]\\n\\n# Load the reference dosecube\\nref = dicom.read_file(ref_file)\\n\\n# Confirm dosecube dimensions match between ref and test\\nif ds.pixel_array.shape != ref.pixel_array.shape:\\n    UTILS.set_comment(\\n        \\\"Dosecube dimensions different to reference. Check the correct month and data have been selected.\\\"\\n    )\\n    result[\\\"status\\\"] = status\\n    result[\\\"max_diff\\\"] = -999\\n\\nelse:\\n    # Compare dosecube arrays\\n    ds_dose_grid = ds.pixel_array * ds.DoseGridScaling\\n    ref_dose_grid = ref.pixel_array * ref.DoseGridScaling\\n    max_diff = np.max(ds_dose_grid - ref_dose_grid)\\n\\n    # Test if arrays agree within tolerance\\n    try:\\n        npt.assert_allclose(\\n            ds_dose_grid,\\n            ref_dose_grid,\\n            rtol=1e-5,\\n            atol=0.004,\\n            err_msg=\\\"Mismatch between Uploaded and Reference Dose Grid\\\",\\n        )\\n        status = \\\"Pass\\\"\\n    except:\\n        status = \\\"Fail\\\"\\n        UTILS.set_comment(\\\"Dosecube outside of tolerance.\\\")\\n\\n    # record dose grid info\\n    dose_grid_scaling = float(ds.DoseGridScaling)\\n    version = ds.SoftwareVersions\\n    try:\\n        creation_date = ds.InstanceCreationDate\\n    except:\\n        creation_date = ds.SeriesDate\\n\\n    # results to dict\\n    result = {\\n        \\\"dose_grid_scaling\\\": dose_grid_scaling,\\n        \\\"creation_date\\\": creation_date,\\n        \\\"max_diff\\\": max_diff,\\n        \\\"status\\\": status,\\n        \\\"version\\\": version,\\n    }\\n\", \"formatting\": \"\"}}, {\"model\": \"qa.test\", \"fields\": {\"name\": \"LRC TPS: Dose Cube Max Diff (Gy)\", \"display_name\": \"Dose Cube Max Difference (Gy)\", \"slug\": \"lrc_tps_dosecubemaxdiff\", \"description\": \"Maximum dose difference between the pixel data of the uploaded dicom file and the baseline gold standard (Gy)\", \"procedure\": null, \"category\": [\"Treatment Planning\"], \"chart_visibility\": false, \"type\": \"scomposite\", \"flag_when\": null, \"hidden\": false, \"skip_without_comment\": false, \"require_comment\": false, \"display_image\": false, \"choices\": null, \"constant_value\": null, \"wrap_low\": null, \"wrap_high\": null, \"calculation_procedure\": \"result = round(lrc_tps_analyse[\\\"max_diff\\\"], 2)\\n\", \"formatting\": \"\"}}, {\"model\": \"qa.test\", \"fields\": {\"name\": \"LRC TPS: Dose Cube File Upload\", \"display_name\": \"Dose Cube File Upload\", \"slug\": \"lrc_tps_doseupload\", \"description\": \"upload and assess dosecube with reference to specific month\", \"procedure\": null, \"category\": [\"Treatment Planning\"], \"chart_visibility\": false, \"type\": \"upload\", \"flag_when\": null, \"hidden\": false, \"skip_without_comment\": false, \"require_comment\": false, \"display_image\": false, \"choices\": null, \"constant_value\": null, \"wrap_low\": null, \"wrap_high\": null, \"calculation_procedure\": \"import pydicom\\nimport hashlib\\nimport numpy.testing as npt\\nimport numpy as np\\nimport datetime\\nimport os\\n\\nresult = FILE.name\\n\\\"\\\"\\\"\\n# month selected by user\\ntest_month = lrc_tps_month\\n\\n# reference dict\\nmonth_cube = {\\n    \\\"January\\\": \\\"arcchk-10fff\\\",\\n    \\\"February\\\": \\\"arcchk-10x\\\",\\n    \\\"March\\\": \\\"arcchk-6fff\\\",\\n    \\\"April\\\": \\\"arcchk-6x\\\",\\n    \\\"May\\\": \\\"brain-6x\\\",\\n    \\\"June\\\": \\\"breast-sib\\\",\\n    \\\"July\\\": \\\"brst-6fff\\\",\\n    \\\"August\\\": \\\"leg-6x\\\",\\n    \\\"September\\\": \\\"lung-6fff\\\",\\n    \\\"October\\\": \\\"lung-sabr\\\",\\n    \\\"November\\\": \\\"spine-sabr\\\",\\n    \\\"December\\\": \\\"spine-simple\\\",\\n}\\n\\n# Read test file\\nds = dicom.read_file(BIN_FILE)\\n\\n# Must be dicom dose\\nif ds.Modality != \\\"RTDOSE\\\":\\n    raise ValueError(\\\"Modality is required to be RTDOSE\\\")\\n\\n# Path to reference dosecubes\\nref_path = os.path.join(\\n    \\\"home\\\",\\n    \\\"ubuntu\\\",\\n    \\\"web\\\",\\n    \\\"qatrackplus\\\",\\n    \\\"media\\\",\\n    \\\"uploads\\\",\\n    \\\"test\\\",\\n    REFS[\\\"lrc_tps_doseupload\\\"],\\n)\\nref_name = glob(os.path.join(ref_path, \\\"*\\\" + month_cube[test_month] + \\\"*.dcm\\\"))[0]\\n\\n# Load the reference dosecube\\nref = dicom.read_file(ref_name)\\n\\n# Confirm dosecube dimensions match between ref and test\\nif ds.pixel_array.shape != ref.pixel_array.shape:\\n    UTILS.set_comment(\\n        \\\"Dosecube dimensions different to reference. Check the correct month and data have been selected.\\\"\\n    )\\n    raise ValueError(\\\"Dosecube dimensions do not match the reference cube\\\")\\n\\n# Compare dosecube arrays\\nds_dose_grid = ds.pixel_array * ds.DoseGridScaling\\nref_dose_grid = ref.pixel_array * ref.DoseGridScaling\\nmax_diff = np.max(ds_dose_grid - ref_dose_grid)\\n\\n# Test if arrays agree within tolerance\\ntry:\\n    npt.assert_allclose(\\n        ds_dose_grid,\\n        ref_dose_grid,\\n        rtol=1e-5,\\n        atol=0.004,\\n        err_msg=\\\"Mismatch between Uploaded and Reference Dose Grid\\\",\\n    )\\n    status = \\\"Pass\\\"\\nexcept:\\n    status = \\\"Fail\\\"\\n\\n# record dose grid info\\ndose_grid_scaling = float(ds.DoseGridScaling)\\nversion = ds.SoftwareVersions\\ntry:\\n    creation_date = ds.InstanceCreationDate\\nexcept:\\n    creation_date = ds.SeriesDate\\n\\n# results to dict\\nresult = {\\n    \\\"dose_grid_scaling\\\": dose_grid_scaling,\\n    \\\"creation_date\\\": creation_date,\\n    \\\"max_diff\\\": max_diff,\\n    \\\"status\\\": status,\\n    \\\"version\\\": version,\\n}\\n\\\"\\\"\\\"\\n\", \"formatting\": \"\"}}, {\"model\": \"qa.test\", \"fields\": {\"name\": \"Performed By\", \"display_name\": \"\", \"slug\": \"user\", \"description\": \"Enter the intials of the person performing the test.\\r\\n\\r\\nThis must be entered as different users may be operating under the same log in details.\\r\\n\", \"procedure\": \"\", \"category\": [\"Factors\"], \"chart_visibility\": true, \"type\": \"string\", \"flag_when\": null, \"hidden\": false, \"skip_without_comment\": false, \"require_comment\": false, \"display_image\": false, \"choices\": \"\", \"constant_value\": null, \"wrap_low\": null, \"wrap_high\": null, \"calculation_procedure\": \"\", \"formatting\": \"\"}}, {\"model\": \"qa.testlistmembership\", \"fields\": {\"test_list\": [\"lrc-tps-annual-qa\"], \"test\": [\"Performed By\"], \"order\": 0}}, {\"model\": \"qa.testlistmembership\", \"fields\": {\"test_list\": [\"lrc-tps-annual-qa\"], \"test\": [\"LRC TPS: Month/Plan\"], \"order\": 1}}, {\"model\": \"qa.testlistmembership\", \"fields\": {\"test_list\": [\"lrc-tps-annual-qa\"], \"test\": [\"LRC TPS: Dose Cube File Upload\"], \"order\": 2}}, {\"model\": \"qa.testlistmembership\", \"fields\": {\"test_list\": [\"lrc-tps-annual-qa\"], \"test\": [\"LRC TPS: Dose Cube Analysis\"], \"order\": 3}}, {\"model\": \"qa.testlistmembership\", \"fields\": {\"test_list\": [\"lrc-tps-annual-qa\"], \"test\": [\"LRC TPS: Dose Cube Comparison\"], \"order\": 4}}, {\"model\": \"qa.testlistmembership\", \"fields\": {\"test_list\": [\"lrc-tps-annual-qa\"], \"test\": [\"LRC TPS: Dose Cube Max Diff (Gy)\"], \"order\": 5}}]}"], "testlistcycles": []}, "meta": {"version": "3.1.0", "datetime": "2025-02-07 08:39:19.392499+00:00", "description": "", "contact": "Alexander Grimwood (Alexander.Grimwood@hcahealthcare.co.uk)", "name": "LRC_TPS_Annual_QA", "id": "6894e41d-256b-439a-ae09-f431c2b3fbfc"}}